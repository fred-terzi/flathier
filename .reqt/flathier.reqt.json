[
  {
    "reqt_ID": "2025-05-21T03:01:31.868Z-b4dc3408",
    "hier": 0,
    "outline": "0",
    "title": "flathier: Flat Hierarchy Data Structure Root",
    "details": "Represents the root of the FlatHier project, which provides a flat, ordered, human-readable, and git-friendly hierarchical data structure. Serves as the entry point and main context for all features and utilities in the project.",
    "requirement": "Must provide a robust, extensible, and easy-to-use flat hierarchy data structure for managing requirements, features, and hierarchical data. Must support all core and utility operations (add, delete, move, promote, demote, outline computation, etc.) in a flat JSON format.",
    "acceptance": "- Project root enables all core and utility features to operate on a flat hierarchy.\n- Data structure is human-readable and suitable for git versioning.\n- All operations (add, delete, move, etc.) are supported and tested.\n- Project documentation and requirements are managed through this root context.",
    "readme": "The flathier root item defines the overall project context and ensures that all hierarchical operations and requirements management are possible in a flat, ordered JSON structure. It is the foundation for all modules and utilities in the project.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:24.688Z-246c2b85",
    "hier": 0,
    "outline": "1",
    "title": "addObject.js: Insert and ID new object after outline number",
    "details": "Implements insertion of a new object into a flat hierarchical array after a specified outline number. Inherits hierarchy, assigns a unique ID to any _ID field, and recomputes outlines for all items. Handles errors gracefully if the outline number is invalid.",
    "requirement": "Must insert a new object after a given outline number, assign a unique ID to any field ending with _ID, and recompute outline numbers for all items. Must not modify data if the outline number is invalid.",
    "acceptance": "- New object appears immediately after the specified outline number.\n- New object has a unique ID in the correct field.\n- Outline numbers are correct and consistent after insertion.\n- No changes are made if the outline number is invalid, and an error is logged.",
    "readme": "The addObject.js module provides a function to insert a new item into a flat hierarchical data array, assign a unique ID, and update outlines. It ensures data integrity and proper error handling.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:24.853Z-15c924e7",
    "hier": 0,
    "outline": "2",
    "title": "asciiTree.js: Render flat hierarchy as ASCII-art tree",
    "details": "Implements a function to render a flat list of items (with outline and title) as an ASCII-art tree. Handles sorting, parent-child relationships, and proper connector symbols. Treats the first top-level item as the main root and supports custom fields for display.",
    "requirement": "Must generate an ASCII-art tree from a flat array of items, showing hierarchy and including specified fields. Must handle multiple top-level nodes by treating the first as the main root.",
    "acceptance": "- Output is a visually correct ASCII-art tree.\n- All items are included in the correct hierarchical position.\n- Custom fields are displayed as specified.\n- Handles multiple top-level nodes by attaching them to the first root.",
    "readme": "The asciiTree.js module provides a function to visualize a flat hierarchy as an ASCII-art tree, making it easy to inspect structure and relationships.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:25.030Z-8beb2478",
    "hier": 0,
    "outline": "3",
    "title": "deleteObject.js: Delete item by outline and update hierarchy",
    "details": "Implements deletion of an item from a flat hierarchical array by outline number. Updates the data array and recomputes outlines for the remaining items. Handles errors gracefully if the outline number is invalid.",
    "requirement": "Must delete an item by outline number and recompute outlines for all remaining items. Must not modify data if the outline number is invalid.",
    "acceptance": "- Item is removed from the array.\n- Outline numbers are correct and consistent after deletion.\n- No changes are made if the outline number is invalid, and an error is logged.",
    "readme": "The deleteObject.js module provides a function to remove an item from a flat hierarchical data array and update outlines, ensuring data integrity.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:25.234Z-10e47560",
    "hier": 0,
    "outline": "4",
    "title": "demote.js: Demote node and subtree one level",
    "details": "Implements demotion of a node (and its subtree) one level deeper in the hierarchy, making it the last child of its immediate previous sibling. Uses buildTree and flattenTree utilities to update the structure.",
    "requirement": "Must demote a node and its subtree one level, updating the hierarchy and outlines. Must not demote the first item or if selection is invalid.",
    "acceptance": "- Node and its subtree become the last child of the previous sibling.\n- Hierarchy and outlines are updated correctly.\n- No changes are made if the selection is invalid or the first item is selected.",
    "readme": "The demote.js module provides a function to demote a node and its subtree, updating the flat hierarchy structure.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:25.390Z-9307aa56",
    "hier": 0,
    "outline": "5",
    "title": "moveDown.js: Move node and subtree down among siblings",
    "details": "Implements moving a node (and its subtree) down one position among its siblings in the hierarchy. Updates the order and recomputes outlines. Handles edge cases where the node is already last or selection is invalid.",
    "requirement": "Must move a node and its subtree down among siblings, updating the order and outlines. Must not modify data if the node is already last or selection is invalid.",
    "acceptance": "- Node and its subtree are moved down one position.\n- Hierarchy and outlines are updated correctly.\n- No changes are made if the node is already last or selection is invalid.",
    "readme": "The moveDown.js module provides a function to move a node and its subtree down among siblings, updating the flat hierarchy structure.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:25.588Z-4d92511c",
    "hier": 0,
    "outline": "6",
    "title": "moveUp.js: Move node and subtree up among siblings",
    "details": "Implements moving a node (and its subtree) up one position among its siblings in the hierarchy. Updates the order and recomputes outlines. Handles edge cases where the node is already first or selection is invalid.",
    "requirement": "Must move a node and its subtree up among siblings, updating the order and outlines. Must not modify data if the node is already first or selection is invalid.",
    "acceptance": "- Node and its subtree are moved up one position.\n- Hierarchy and outlines are updated correctly.\n- No changes are made if the node is already first or selection is invalid.",
    "readme": "The moveUp.js module provides a function to move a node and its subtree up among siblings, updating the flat hierarchy structure.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:25.726Z-52e313cd",
    "hier": 0,
    "outline": "7",
    "title": "promote.js: Promote node and subtree one level up",
    "details": "Implements promotion of a node (and its subtree) one level up in the hierarchy, making it a sibling of its parent. Uses buildTree and flattenTree utilities to update the structure.",
    "requirement": "Must promote a node and its subtree one level up, updating the hierarchy and outlines. Must not promote if already top-level or selection is invalid.",
    "acceptance": "- Node and its subtree become a sibling of their parent.\n- Hierarchy and outlines are updated correctly.\n- No changes are made if the selection is invalid or already top-level.",
    "readme": "The promote.js module provides a function to promote a node and its subtree, updating the flat hierarchy structure.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:25.873Z-2f157233",
    "hier": 0,
    "outline": "8",
    "title": "buildTree.js: Build nested tree from flat array",
    "details": "Implements a utility to convert a flat array of items (with outline and hier fields) into a nested tree structure. Used for hierarchical operations and visualization.",
    "requirement": "Must build a nested tree structure from a flat array, preserving parent-child relationships based on outline and hier fields.",
    "acceptance": "- Output is a correct nested tree structure.\n- All parent-child relationships are preserved.\n- Handles edge cases such as missing parents or multiple roots.",
    "readme": "The buildTree.js utility provides a function to convert a flat hierarchy into a nested tree, enabling hierarchical operations and visualizations.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:26.036Z-3165bb30",
    "hier": 0,
    "outline": "9",
    "title": "computeOutlines.js: Recompute outline numbers for all items",
    "details": "Implements a utility to recalculate outline numbers for all items in a flat hierarchy after structural changes (insert, delete, move, etc.). Ensures outline consistency.",
    "requirement": "Must recompute outline numbers for all items in the array, reflecting the current hierarchy and order.",
    "acceptance": "- All items have correct and consistent outline numbers after changes.\n- Handles edge cases such as empty arrays or deeply nested structures.",
    "readme": "The computeOutlines.js utility ensures that all items in a flat hierarchy have correct outline numbers after any structural modification.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:26.191Z-184d74d5",
    "hier": 0,
    "outline": "10",
    "title": "editTitle.js: Edit the title of an item by outline",
    "details": "Implements a utility to update the title field of an item in a flat hierarchy, identified by its outline number.",
    "requirement": "Must update the title of the specified item by outline number, leaving other fields unchanged.",
    "acceptance": "- Only the title field is updated for the specified item.\n- No changes are made if the outline number is invalid.",
    "readme": "The editTitle.js utility provides a function to update the title of an item in a flat hierarchy by outline number.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:26.345Z-ace32d0d",
    "hier": 0,
    "outline": "11",
    "title": "flattenTree.js: Flatten nested tree to flat array",
    "details": "Implements a utility to convert a nested tree structure back into a flat array, assigning correct outline and hier fields.",
    "requirement": "Must flatten a nested tree into a flat array, preserving outline and hier information for each item.",
    "acceptance": "- Output is a flat array with correct outline and hier fields.\n- All items from the tree are included.\n- Handles edge cases such as empty trees or single-node trees.",
    "readme": "The flattenTree.js utility provides a function to flatten a nested tree structure into a flat array for storage or further processing.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  },
  {
    "reqt_ID": "2025-05-21T03:14:26.495Z-c5078ce8",
    "hier": 0,
    "outline": "12",
    "title": "generateUniqueId.js: Generate unique IDs for items",
    "details": "Implements a utility to generate unique IDs for items, typically used for fields ending with _ID. Ensures uniqueness and timestamp-based IDs.",
    "requirement": "Must generate a unique, timestamp-based ID string for use in item fields.",
    "acceptance": "- Generated IDs are unique and include a timestamp.\n- Can be used for any field ending with _ID.",
    "readme": "The generateUniqueId.js utility provides a function to generate unique, timestamp-based IDs for use in hierarchical data structures.",
    "status": "Done",
    "readme_ai": "include",
    "test_exists": true,
    "test_passed": true
  }
]